{"version":3,"sources":["Services/async-storage.service.js","Services/weatherService.js","store/actions/weatherActions.js","imgs/hamburger.png","cmps/AppHeader.jsx","cmps/SearchBar.jsx","hooks/useInput.jsx","Services/favoritesService.js","imgs/cloudy-day.png","imgs/rain.png","imgs/sun.png","imgs/cloud-with-rain.png","cmps/CurrentLocation.jsx","store/actions/favoriteActions.js","cmps/TemperatureCard.jsx","cmps/TemperatureList.jsx","pages/HomePage.jsx","cmps/FavoriteCard.jsx","cmps/FavoriteList.jsx","pages/Favorites.jsx","cmps/AppFooter.jsx","App.jsx","reportWebVitals.js","store/reducers/weatherReducer.js","store/reducers/favoriteReducer.js","store/index.js","index.js"],"names":["storageService","loadFromStorage","key","json","localStorage","getItem","JSON","parse","saveToStorage","data","stringify","setItem","axios","require","default","WEATHER_KEY","defaultWeather","weather","_cacheWeather","weatherService","query","searchCity","getForecast","cityName","a","get","res","alert","cityKey","result","then","DailyForecasts","console","log","getCity","dispatch","city","type","Key","fiveDaysForecast","changeMeasure","measure","AppHeader","measureState","useSelector","state","weatherModule","useDispatch","navEl","useRef","className","ref","onClick","activeClassName","exact","to","current","includes","src","hamburgerImg","alt","SearchBar","initialValue","useState","value","setValue","reset","bind","onChange","event","target","useInput","nameValue","onSubmit","placeholder","FAVORITE_KEY","favorites","favoriteService","saveFavorite","deleteFavorite","_id","idx","findIndex","favorite","splice","makeId","push","length","txt","possible","i","charAt","Math","floor","random","CurrentLocation","cityState","weatherState","forecast","favoriteState","favoriteModule","condition","cloudyDayImg","rainImg","sunImg","cloudWithRainImg","showWeatherConditions","Day","IconPhrase","LocalizedName","find","favoriteToSave","TemperatureCard","props","weatherDate","day","Date","split","substring","getDayName","forecastDay","Temperature","Maximum","Value","Minimum","parseInt","dateStr","locale","toLocaleDateString","weekday","TemperatureList","map","HomePage","FavoriteCard","redirectState","setRedirect","favoriteClicked","Imperial","WeatherText","FavoriteList","Favorites","AppFooter","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79b9dff1.chunk.js","sourcesContent":["\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    var json = localStorage.getItem(key)\r\n    var data = JSON.parse(json)\r\n    return data;\r\n}\r\n\r\nfunction saveToStorage(key, data){\r\n    var json = JSON.stringify(data);\r\n    localStorage.setItem(key, json)\r\n}","import { storageService } from './async-storage.service.js'\r\nconst axios = require('axios').default;\r\nconst WEATHER_KEY = \"weatherDB\"\r\n\r\nlet defaultWeather = require('../jsons/defaultForecast.json')\r\nlet weather = storageService.loadFromStorage(WEATHER_KEY)\r\nif (!weather) {\r\n    weather = defaultWeather\r\n    _cacheWeather();\r\n}\r\n\r\nexport const weatherService = {\r\n    query,\r\n    searchCity,\r\n    getForecast,\r\n}\r\n\r\n\r\n\r\nfunction query() {\r\n    return weather\r\n}\r\n\r\nasync function searchCity(cityName) {\r\n    try {\r\n        const res = await axios.get(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=yG9cwpzS3KYzHg0h5iejNAFOvOcWmYz2&q=${cityName}`)\r\n        return res.data\r\n    }\r\n\r\n    catch (err) {\r\n        alert('something went wrong!', err)\r\n    }\r\n}\r\n\r\n\r\nasync function getForecast(cityKey) {\r\n    try { \r\n        const result= axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=yG9cwpzS3KYzHg0h5iejNAFOvOcWmYz2&language=en-us&metric=true HTTP/1.1`)\r\n        .then((res) => {\r\n            res = res.data.DailyForecasts\r\n            return res\r\n        })\r\n        return result\r\n    }\r\n    catch (error){\r\n   console.log('error has occured');\r\n    }\r\n    // return axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=yG9cwpzS3KYzHg0h5iejNAFOvOcWmYz2&language=en-us&metric=true HTTP/1.1`)\r\n    //     .then((res) => {\r\n    //         res = res.data.DailyForecasts\r\n    //         return res\r\n    //     })\r\n}\r\n\r\nasync function _cacheWeather() {\r\n    console.log('chacing weather');\r\n    try {\r\n        const res = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/215854?apikey=yG9cwpzS3KYzHg0h5iejNAFOvOcWmYz2&language=en-us&metric=true HTTP/1.1`)\r\n        let weather = res.data.DailyForecasts\r\n        storageService.saveToStorage(WEATHER_KEY, weather)\r\n\r\n    } catch (error) {\r\n        storageService.saveToStorage(WEATHER_KEY, defaultWeather)\r\n    }\r\n\r\n}","\r\nimport { weatherService } from \"../../Services/weatherService\"\r\n\r\nexport function getForecast(key) {\r\n  return async (dispatch) => {\r\n    const fiveDaysForecast = await weatherService.getForecast(key)\r\n\r\n    dispatch({ type: \"SET_FORECAST\", fiveDaysForecast })\r\n  }\r\n}\r\n\r\nexport function getCity(cityName) {\r\n  return async (dispatch) => {\r\n    try {\r\n      let city = await weatherService.searchCity(cityName)\r\n      if (city[0]) {\r\n        city = city[0]\r\n        dispatch({ type: \"GET_CITY\", city })\r\n        const fiveDaysForecast = await weatherService.getForecast(city.Key)\r\n        dispatch({ type: \"SET_FORECAST\", fiveDaysForecast })\r\n      }\r\n      else alert('could not find city!');\r\n    }\r\n\r\n\r\n    catch (err) {\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\nexport function changeMeasure(measure) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"CHANGE_MEASURE\", measure })\r\n  }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/hamburger.a633845b.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { changeMeasure } from \"../store/actions/weatherActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useRef } from \"react\";\r\nimport hamburgerImg from '../imgs/hamburger.png';\r\n\r\nexport default function AppHeader() {\r\n  const measureState = useSelector((state) => state.weatherModule.measure);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navEl = useRef(null);\r\n\r\n  function hamburgerClicked() {\r\n    console.log(navEl);\r\n    if (navEl.current.className.includes(\"visible\")) {\r\n      navEl.current.className = \"hidden\";\r\n    } else navEl.current.className = \"visible\";\r\n  }\r\n\r\n  function measureButton() {\r\n    if (measureState === \"farenheit\")\r\n      return (\r\n        <button onClick={() => dispatch(changeMeasure(\"celsius\"))}>℉</button>\r\n      );\r\n\r\n    return (\r\n      <button onClick={() => dispatch(changeMeasure(\"farenheit\"))}>℃</button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <header className=\"main-header\">\r\n      <div className=\"header-container\">\r\n        <p>Forecastio</p>\r\n        <ul ref={navEl}>\r\n          <li>{measureButton()}</li>\r\n          <li>\r\n            <NavLink activeClassName=\"active-nav\" exact to=\"/\">\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink activeClassName=\"active-nav\" exact to=\"/favorites\">\r\n              Favorites\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <button className=\"hamburger\" onClick={() => hamburgerClicked()}>\r\n          <img src={hamburgerImg} alt=\"hamburger menu\" />\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useInput } from \"../hooks/useInput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCity } from \"../store/actions/weatherActions\";\r\n\r\nexport default function SearchBar() {\r\n  const dispatch = useDispatch();\r\n  const { value: nameValue, bind, reset } = useInput(\"\");\r\n\r\n  return (\r\n    <form\r\n      className=\"search-bar\"\r\n      onSubmit={() => {\r\n        dispatch(getCity(nameValue));\r\n        reset();\r\n      }}\r\n    >\r\n      <input type=\"text\" {...bind} placeholder=\"Type here your desired city\" />\r\n      <button>Search</button>\r\n    </form>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(\"\"),\r\n    bind: {\r\n      value,\r\n      onChange: event => {\r\n        setValue(event.target.value);\r\n      }\r\n    }\r\n  };\r\n};","import { storageService } from './async-storage.service.js'\r\nconst axios = require('axios').default;\r\nconst FAVORITE_KEY = \"weatherFavoritesDB\"\r\n\r\nlet favorites = storageService.loadFromStorage(FAVORITE_KEY)\r\nif (!favorites) favorites = [];\r\n\r\n\r\n\r\n\r\nexport const favoriteService = {\r\n    query,\r\n    saveFavorite,\r\n    deleteFavorite\r\n}\r\n\r\n\r\n\r\nfunction query() {\r\n    return favorites\r\n}\r\n\r\nasync function saveFavorite(favorite) {\r\n    try {\r\n        favorite.weather = await axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${favorite.cityKey}?apikey=yG9cwpzS3KYzHg0h5iejNAFOvOcWmYz2&details=false`)\r\n            .then(res => {\r\n                return res.data[0]\r\n            })\r\n\r\n        favorite._id = makeId();\r\n        favorites.push(favorite)\r\n        storageService.saveToStorage(FAVORITE_KEY, favorites)\r\n        return favorites\r\n    }\r\n    catch {\r\n        favorite._id = makeId();\r\n        favorites.push(favorite)\r\n        storageService.saveToStorage(FAVORITE_KEY, favorites)\r\n        return favorites\r\n    }\r\n}\r\n\r\n function deleteFavorite(_id) {\r\n    const idx = favorites.findIndex(favorite => favorite._id === _id)\r\n    favorites.splice(idx, 1)\r\n    storageService.saveToStorage(FAVORITE_KEY, favorites)\r\n    return favorites\r\n\r\n}\r\n\r\n\r\n\r\nfunction makeId(length = 7) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}","export default __webpack_public_path__ + \"static/media/cloudy-day.ecd05671.png\";","export default __webpack_public_path__ + \"static/media/rain.57bc7802.png\";","export default __webpack_public_path__ + \"static/media/sun.5b095b3c.png\";","export default __webpack_public_path__ + \"static/media/cloud-with-rain.23007305.png\";","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { saveFavorite } from \"../store/actions/favoriteActions\";\r\nimport cloudyDayImg from \"../imgs/cloudy-day.png\";\r\nimport rainImg from \"../imgs/rain.png\";\r\nimport sunImg from \"../imgs/sun.png\";\r\nimport cloudWithRainImg from \"../imgs/cloud-with-rain.png\";\r\n\r\nexport default function CurrentLocation() {\r\n  const cityState = useSelector((state) => state.weatherModule.city);\r\n  const weatherState = useSelector((state) => state.weatherModule.forecast);\r\n  const favoriteState = useSelector((state) => state.favoriteModule.favorites);\r\n\r\n\r\n  function checkFavorites() {\r\n\r\n    const isInFavorites = favoriteState.find((favorite) => {\r\n      return favorite.cityKey === cityState.Key;\r\n    });\r\n    if (isInFavorites) return <p>♥</p> ;\r\n    else return <p>♡</p> ;\r\n  }\r\n  const dispatch = useDispatch();\r\n\r\n  function showWeatherConditions(condition) {\r\n    switch (condition) {\r\n      case \"Mostly cloudy\":\r\n        return <img src={cloudyDayImg}></img>;\r\n      case \"Rain\" || \"Showers\":\r\n        return <img src={rainImg}></img>;\r\n      case \"Sunny\":\r\n        return <img src={sunImg}></img>;\r\n      case \"Mostly cloudy w/ showers\":\r\n        return <img src={cloudWithRainImg}></img>;\r\n\r\n      default:\r\n        return <img src={sunImg}></img>;\r\n    }\r\n  }\r\n\r\nif(weatherState) return (\r\n    <div className=\"current-location\">\r\n      <div className=\"current-location-details\">\r\n        {showWeatherConditions(weatherState[0].Day.IconPhrase)}\r\n        <p>\r\n          It is currently {weatherState[0].Day.IconPhrase} in{\" \"}\r\n          {cityState.LocalizedName}{\" \"}\r\n        </p>\r\n      </div>\r\n      <div className=\"save-details\">\r\n        {checkFavorites()}\r\n        <button\r\n          onClick={() => {\r\n            const favoriteToSave = {\r\n              cityName: cityState.LocalizedName,\r\n              cityKey: cityState.Key,\r\n            };\r\n            dispatch(saveFavorite(favoriteToSave));\r\n          }}\r\n        >\r\n          save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (<p>loading...</p>)\r\n}\r\n","import { favoriteService } from '../../Services/favoritesService'\r\n\r\nexport function saveFavorite(favorite) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const favorites = await favoriteService.saveFavorite(favorite)\r\n            dispatch({ type: \"ADD_FAVORITE\", favorites })\r\n        }\r\n        catch {\r\n            const favorites = [favorite]\r\n            { dispatch({ type: \"ADD_FAVORITE\", favorites }) }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deleteFavorite(_id) {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const favorites = JSON.parse(JSON.stringify(await favoriteService.deleteFavorite(_id)))\r\n        dispatch({ type: \"REMOVE_FAVORITE\", favorites })\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nexport default function TemperatureCard(props) {\r\n  const measureState = useSelector((state) => state.weatherModule.measure);\r\n\r\n  function forecastDay() {\r\n    let weatherDate = props.day.Date.split(\"-\");\r\n    weatherDate[2] = weatherDate[2].substring(0, weatherDate[2].length - 15);\r\n    return (\r\n      <p>\r\n        {getDayName(\r\n          `${weatherDate[1]}/${weatherDate[2]}/${weatherDate[0]}`,\r\n          \"en-UK\"\r\n        )}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  function renderTemperature() {\r\n    if (measureState === \"farenheit\") {\r\n      return (\r\n        <p>\r\n          {\" \"}\r\n          {(props.day.Temperature.Maximum.Value +\r\n            props.day.Temperature.Minimum.Value) /\r\n            2}\r\n          ℉\r\n        </p>\r\n      );\r\n          }\r\n      else return (\r\n        <p>\r\n        {\" \"}\r\n        {parseInt(((props.day.Temperature.Maximum.Value-32)*(5/9)) +\r\n         ((props.day.Temperature.Minimum.Value-32)*(5/9))/2)}\r\n        ℃\r\n      </p>\r\n      )\r\n    \r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {forecastDay()}\r\n      {renderTemperature()}\r\n      <p> {props.day.Day.IconPhrase}</p>\r\n    </li>\r\n  );\r\n}\r\nfunction getDayName(dateStr, locale) {\r\n  var date = new Date(dateStr);\r\n  return date.toLocaleDateString(locale, { weekday: \"long\" });\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TemperatureCard from \"./TemperatureCard\";\r\n\r\nexport default function TemperatureList() {\r\n\r\n  const weatherState= useSelector(state=> state.weatherModule.forecast)\r\n  if(weatherState) return (\r\n    <ul className='temperature-list'>\r\n       { weatherState.map(day =>{\r\n         return <TemperatureCard day={day} key={day.Date} />\r\n       })}\r\n    </ul>\r\n\r\n  );\r\n else return (\r\n   <h1>loading</h1>\r\n )\r\n     \r\n\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport SearchBar from \"../cmps/SearchBar\";\r\nimport CurrentLocation from '../cmps/CurrentLocation'\r\nimport TemperatureList from '../cmps/TemperatureList'\r\n\r\nexport default function HomePage() {\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <SearchBar/>\r\n      <main> \r\n      <CurrentLocation/>\r\n      <TemperatureList/>\r\n      </main>\r\n   \r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCity } from \"../store/actions/weatherActions\";\r\nimport { deleteFavorite } from \"../store/actions/favoriteActions\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function FavoriteCard(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const measureState = useSelector((state) => state.weatherModule.measure);\r\n  const [redirectState, setRedirect] = useState(false);\r\n\r\n  async function favoriteClicked() {\r\n    await dispatch(getCity(props.favorite.cityName));\r\n    setRedirect(!redirectState);\r\n  }\r\n\r\n  function renderRedirect() {\r\n    if (redirectState) return <Redirect to=\"/\" />;\r\n    else return null;\r\n  }\r\n\r\n  function renderTemperature() {\r\n    if (measureState === \"farenheit\") {\r\n      return <p>{props.favorite.weather.Temperature.Imperial.Value}℉</p>;\r\n    } else\r\n      return (\r\n        <p>\r\n          {\" \"}\r\n          {parseInt((props.favorite.weather.Temperature.Imperial.Value - 32) * (5 / 9))}℃\r\n        </p>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <li\r\n      onClick={() => {\r\n        favoriteClicked();\r\n      }}\r\n    >\r\n      {renderRedirect()}\r\n      <p> {props.favorite.cityName}</p>\r\n      {renderTemperature()}\r\n      <p>{props.favorite.weather.WeatherText} </p>\r\n\r\n      <button\r\n        onClick={() => {\r\n          dispatch(deleteFavorite(props.favorite._id));\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FavoriteCard from \"./FavoriteCard\";\r\n\r\nexport default function FavoriteList() {\r\n\r\n  const favoriteState= useSelector(state=> state.favoriteModule.favorites)\r\n  if(favoriteState) return (\r\n    <ul>\r\n       { favoriteState.map(favorite =>{\r\n         return <FavoriteCard key={favorite._id} favorite={favorite} />\r\n       })}\r\n    </ul>\r\n\r\n  );\r\n else return (\r\n   <h1>no favorites!</h1>\r\n )\r\n\r\n}\r\n","import React from 'react'\r\nimport FavoriteList from '../cmps/FavoriteList'\r\n\r\nexport default function Favorites(){\r\n\r\n   return( <div className=\"favorites\">\r\n      <FavoriteList/>\r\n   </div>)\r\n}","import React from \"react\";\r\n\r\nexport default function AppFooter() {\r\n  return (\r\n    <header className=\"main-footer\">\r\n      <div className=\"footer-container\">\r\n        <p>Cofeerights ©</p>\r\n        </div>\r\n    </header>\r\n  );\r\n}","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AppHeader from \"./cmps/AppHeader\";\nimport HomePage from \"./pages/HomePage\";\nimport Favorites from './pages/Favorites'\nimport AppFooter from \"./cmps/AppFooter\";\nfunction App() {\n\n\n  \n  return (\n    <Router>\n        <AppHeader/>\n        <Switch>\n        <Route path=\"/favorites\" component={Favorites} />\n        <Route path=\"/\" component={HomePage} />  \n        </Switch>\n        <AppFooter/>\n    </Router>\n  );\n}\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { weatherService } from \"../../Services/weatherService\"\r\n\r\nconst INITIAL_STATE={\r\n    city: {Key: '21584', LocalizedName: 'Tel Aviv'},\r\n    forecast: weatherService.query(),\r\n    measure:'farenheit'\r\n}\r\n\r\nexport function weatherReducer(state = INITIAL_STATE, action) {\r\n  \r\n    switch (action.type) {\r\n        case \"SET_FORECAST\":\r\n            return {\r\n                ...state,\r\n                forecast: action.fiveDaysForecast\r\n            }\r\n            case \"GET_CITY\":\r\n            return{\r\n                ...state,\r\n               city:action.city\r\n            }\r\n            default: return state\r\n\r\n            case \"CHANGE_MEASURE\":\r\n            return{\r\n                ...state,\r\n                measure:action.measure\r\n            }\r\n          \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import { favoriteService } from '../../Services/favoritesService'\r\n\r\nconst INITIAL_STATE = {\r\n    favorites: favoriteService.query()\r\n}\r\n\r\n\r\nexport function favoriteReducer(state = INITIAL_STATE, action) {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_FAVORITE\":\r\n            return {\r\n                ...state,\r\n               favorites:action.favorites\r\n            }\r\n        case \"REMOVE_FAVORITE\":\r\n            return {\r\n                ...state,\r\n                favorites:action.favorites\r\n            }   \r\n        default: return state\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { weatherReducer } from \"./reducers/weatherReducer\";\r\nimport { favoriteReducer } from \"./reducers/favoriteReducer\";\r\n\r\n// Connecting redux devtools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// Combining reducers into one\r\nconst rootReducer = combineReducers({\r\n  weatherModule: weatherReducer,\r\n  favoriteModule: favoriteReducer\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/main.scss';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport {store} from \"./store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();"],"sourceRoot":""}